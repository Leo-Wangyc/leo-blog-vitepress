import{_ as s,o as a,c as n,Q as p}from"./chunks/framework.4719a631.js";const F=JSON.parse('{"title":"特殊处理","description":"","frontmatter":{},"headers":[],"relativePath":"documents/computer-science/Front-end/special.md","filePath":"documents/computer-science/Front-end/special.md"}'),l={name:"documents/computer-science/Front-end/special.md"},o=p(`<h1 id="特殊处理" tabindex="-1">特殊处理 <a class="header-anchor" href="#特殊处理" aria-label="Permalink to &quot;特殊处理&quot;">​</a></h1><h2 id="_1-对象数组根据特定属性进行排序" tabindex="-1">1 对象数组根据特定属性进行排序 <a class="header-anchor" href="#_1-对象数组根据特定属性进行排序" aria-label="Permalink to &quot;1 对象数组根据特定属性进行排序&quot;">​</a></h2><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> arr </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span></span>
<span class="line"><span style="color:#E1E4E8;">  { name: </span><span style="color:#9ECBFF;">&quot;zopp&quot;</span><span style="color:#E1E4E8;">, age: </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">  { name: </span><span style="color:#9ECBFF;">&quot;gpp&quot;</span><span style="color:#E1E4E8;">, age: </span><span style="color:#79B8FF;">18</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">  { name: </span><span style="color:#9ECBFF;">&quot;yjj&quot;</span><span style="color:#E1E4E8;">, age: </span><span style="color:#79B8FF;">8</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">compare</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">property</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">a</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">b</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> value1 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> a[property];</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> value2 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> b[property];</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> value1 </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> value2;</span></span>
<span class="line"><span style="color:#E1E4E8;">  };</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(arr.</span><span style="color:#B392F0;">sort</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">compare</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;age&quot;</span><span style="color:#E1E4E8;">)));</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> arr </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span></span>
<span class="line"><span style="color:#24292E;">  { name: </span><span style="color:#032F62;">&quot;zopp&quot;</span><span style="color:#24292E;">, age: </span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">  { name: </span><span style="color:#032F62;">&quot;gpp&quot;</span><span style="color:#24292E;">, age: </span><span style="color:#005CC5;">18</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">  { name: </span><span style="color:#032F62;">&quot;yjj&quot;</span><span style="color:#24292E;">, age: </span><span style="color:#005CC5;">8</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">compare</span><span style="color:#24292E;">(</span><span style="color:#E36209;">property</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">a</span><span style="color:#24292E;">, </span><span style="color:#E36209;">b</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> value1 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> a[property];</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> value2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> b[property];</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> value1 </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> value2;</span></span>
<span class="line"><span style="color:#24292E;">  };</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(arr.</span><span style="color:#6F42C1;">sort</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">compare</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;age&quot;</span><span style="color:#24292E;">)));</span></span></code></pre></div><p>参考资料</p><blockquote><p><a href="https://www.cnblogs.com/saifei/p/9043821.html" target="_blank" rel="noreferrer">https://www.cnblogs.com/saifei/p/9043821.html</a></p></blockquote><h2 id="_2-关于-0-undefined-等值和-的结合" tabindex="-1">2 关于 0，undefined 等值和&amp;&amp;的结合 <a class="header-anchor" href="#_2-关于-0-undefined-等值和-的结合" aria-label="Permalink to &quot;2 关于 0，undefined 等值和&amp;&amp;的结合&quot;">​</a></h2><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">123</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// 0	0类似为false</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">123</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// 123	两边都为true，默认取右边</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1234</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">123</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// 123</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">undefined</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">123</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// undefined	undefined类似为false</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">123</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// 0	0类似为false</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">123</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// 123	两边都为true，默认取右边</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1234</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">123</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// 123</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">undefined</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">123</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// undefined	undefined类似为false</span></span></code></pre></div><p>此问题经常出现在年龄上，当后台返回的年龄值为 0（number）时，类似 age &amp;&amp; <div>component</div> 的语法就会失效</p>`,8),e=[o];function t(c,r,E,y,i,d){return a(),n("div",null,e)}const m=s(l,[["render",t]]);export{F as __pageData,m as default};
